@model Greenit.Models.BlogPost
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService Authorization
@{
    var canEdit = (await Authorization.AuthorizeAsync(User, MyIdentityData.BlogPolicy_Edit)).Succeeded;
}
@{
    var canAdd = (await Authorization.AuthorizeAsync(User, MyIdentityData.BlogPolicy_Add)).Succeeded;
}

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>BlogPost</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Body)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Body)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Posted)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Posted)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UserId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UserId)
        </dd>
        <dd class="col-sm-10">
            <br />
            <strong><h3>Comments</h3></strong>
            <br />
            @if (Model.Comments != null && Model.Comments.Any())
            {
                @foreach (var comment in Model.Comments)
                {
                    <p class="commentField">@comment.UserId @comment.Body</p>
                }
            }
        </dd>
    </dl>
</div>
<div>
    @if (canEdit)
    {
        <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
    }
    @if (canAdd)
    {

    @Html.Partial("AddCommentPartial.cshtml", new Comment() { PostId = Model.Id });
    }
    

    <a asp-action="Index">Back to List</a>
</div>
