@model Greenit.Models.BlogPost
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService Authorization
@{
    var canEdit = (await Authorization.AuthorizeAsync(User, MyIdentityData.BlogPolicy_Edit)).Succeeded;
}
@{
    var canAdd = (await Authorization.AuthorizeAsync(User, MyIdentityData.BlogPolicy_Add)).Succeeded;
}

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>BlogPost</h4>
    <hr />
    <div class="card mb-3">
        <img class="card-img-top" src="~/images/headerphoto.png" alt="Card image cap">
        <div class="card-body">
            <h3 class="card-title">@Html.DisplayFor(model => model.Title)</h3>
            <small><i>&nbsp&nbsp&nbsp&nbsp- Posted by: @Html.DisplayFor(model => model.UserId)</i></small><br /><br />

            <p class="card-text" style="color:black;">@Html.DisplayFor(model => model.Body)</p>
            <p class="card-text"><small class="text-muted">Time Uploaded: @Html.DisplayFor(model => model.Posted)</small></p>
        </div>
    </div>

</div>
<br />
<strong><h3>Comments</h3></strong>
<br />
@if (Model.Comments != null && Model.Comments.Any())
{
    @foreach (var comment in Model.Comments)
    {
        <p class="commentField"><i style="color: #8dc73f;">@comment.UserId:</i> @comment.Body</p>
    }
}
<div>
    @*@if (canEdit)
        {
            <a asp-action="Edit" asp-route-id="@Model.Id">[ Edit Entry ]</a>
        }*@
    @if (canAdd)
    {
        <br />
        <br />
        <br />
        @Html.Partial("AddCommentPartial.cshtml", new Comment() { PostId = Model.Id });
    }


    <a asp-controller="Channels" asp-action="Index">Back to List</a>
</div>
