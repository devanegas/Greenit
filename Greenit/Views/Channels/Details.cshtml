@model Greenit.Models.Channel
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService Authorization
@{
    ViewData["Title"] = "Details";
}
@{
    var canEdit = (await Authorization.AuthorizeAsync(User, MyIdentityData.BlogPolicy_Edit)).Succeeded;
}
@{
    var canAdd = (await Authorization.AuthorizeAsync(User, MyIdentityData.BlogPolicy_Add)).Succeeded;
}

<h1>Details</h1>

<div>
    <h4>Channel</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        @if (Model.posts != null && Model.posts.Any())
        {
            <ul>
                @foreach (var post in Model.posts)
                {
                    <li><a asp-controller="BlogPosts" asp-action="Details" asp-route-id="@post.Id">@post.Title</a></li>
                }
            </ul>
        }
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
@if (canAdd)
{

    @Html.Partial("AddPostPartial.cshtml", new BlogPost() { ChannelId = Model.Id });
}
