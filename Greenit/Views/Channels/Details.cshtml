@model Greenit.Models.Channel
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService Authorization
@{
    ViewData["Title"] = "Details";
}
@{
    var canEdit = (await Authorization.AuthorizeAsync(User, MyIdentityData.BlogPolicy_Edit)).Succeeded;
}
@{
    var canAdd = (await Authorization.AuthorizeAsync(User, MyIdentityData.BlogPolicy_Add)).Succeeded;
}

<h1>Details</h1>

<div>

    <h5><i>&nbsp&nbsp&nbsp&nbspChannel:  @Html.DisplayFor(modelItem => Model.Name)</i></h5>
    <hr />

    <h3>Posts:</h3>
    <br />
    @if (Model.posts != null && Model.posts.Any())
    {
        @foreach (var post in Model.posts)
        {<a class="letteredChannel" asp-controller="BlogPosts" asp-action="Details" asp-route-id="@post.Id" asp-route-slug="@post.Slug">
             <h5>
                 &nbsp&nbsp&nbsp&nbsp<img src="~/images/blog_icon.png" height="30px" width="30px" />
                 @post.Title
             </h5><br>
         </a>
        }
    }
</div>
<div>
    @if (canEdit)
    {
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit Channel Name |</a> 
    }

    <a asp-action="Index">Back to List</a>
</div>
<br />
@if (canAdd)
{

    @Html.Partial("AddPostPartial.cshtml", new BlogPost() { ChannelId = Model.Id });
}
